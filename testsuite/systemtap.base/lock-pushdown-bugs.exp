set test "lock-pushdown-bugs"
set testpath "$srcdir/$subdir"

if {! [installtest_p]} { untested $test; return }
if {! [uretprobes_p]} { untested $test; return }

# --- TEST 1 ---

set subtest1 "TEST 1: PR31018: if stmt needing locks before a map op stmt (check at runtime)"

set res [target_compile ${testpath}/${test}_1.c ./a.out executable \
    "additional_flags=-O additional_flags=-g additional_flags=-Wno-unused-parameter"]
if {$res ne ""} {
    verbose "target_compile failed: $res" 2
    fail "$test: $subtest1: unable to compile ${test}_1.c"
} else {
    foreach runtime [get_runtime_list] {
        if {$runtime eq ""} {
            set runtime "kernel"
        }
        set test_name "$test: $subtest1 ($runtime)"
        set cmd "stap -g --runtime=$runtime -c ./a.out '$srcdir/$subdir/${test}_1.stp'"
        set exit_code [run_cmd_2way $cmd out stderr]
        set exp_out "ok\n"
        is "${test_name}: stdout" $out $exp_out
        set exp_stderr ""
        is "${test_name}: stderr" $stderr $exp_stderr
        is "${test_name}: exit code" $exit_code 0
    }
}

# --- TEST 2 ---

set subtest2 "TEST 2: PR31018: if stmt needing locks before a map op stmt (check at runtime, if entered)"

set res [target_compile ${testpath}/${test}_1.c ./a.out executable \
    "additional_flags=-O additional_flags=-g additional_flags=-Wno-unused-parameter"]
if {$res ne ""} {
    verbose "target_compile failed: $res" 2
    fail "$test: $subtest2: unable to compile ${test}_1.c"
} else {
    foreach runtime [get_runtime_list] {
        if {$runtime eq ""} {
            set runtime "kernel"
        }
        set test_name "$test: $subtest2 ($runtime)"
        set cmd "stap -g --runtime=$runtime -c ./a.out '$srcdir/$subdir/${test}_2.stp'"
        set exit_code [run_cmd_2way $cmd out stderr]
        set exp_out "ok\n"
        is "${test_name}: stdout" $out $exp_out
        set exp_stderr ""
        is "${test_name}: stderr" $stderr $exp_stderr
        is "${test_name}: exit code" $exit_code 0
    }
}

# --- TEST 3 ---

set subtest3 "TEST 3: PR31018: nested block stmt needing locks before a map op stmt (check at runtime)"

set res [target_compile ${testpath}/${test}_1.c ./a.out executable \
    "additional_flags=-O additional_flags=-g additional_flags=-Wno-unused-parameter"]
if {$res ne ""} {
    verbose "target_compile failed: $res" 2
    fail "$test: $subtest3: unable to compile ${test}_1.c"
} else {
    foreach runtime [get_runtime_list] {
        if {$runtime eq ""} {
            set runtime "kernel"
        }
        set test_name "$test: $subtest3 ($runtime)"
        set cmd "stap -g --runtime=$runtime -c ./a.out '$srcdir/$subdir/${test}_3.stp'"
        set exit_code [run_cmd_2way $cmd out stderr]
        set exp_out "ok\n"
        is "${test_name}: stdout" $out $exp_out
        set exp_stderr ""
        is "${test_name}: stderr" $stderr $exp_stderr
        is "${test_name}: exit code" $exit_code 0
    }
}

# --- TEST 4 ---

set subtest4 "TEST 4: PR31018: nested block stmt needing locks before a map op stmt (check at runtime, if taken)"

set res [target_compile ${testpath}/${test}_1.c ./a.out executable \
    "additional_flags=-O additional_flags=-g additional_flags=-Wno-unused-parameter"]
if {$res ne ""} {
    verbose "target_compile failed: $res" 2
    fail "$test: $subtest4: unable to compile ${test}_1.c"
} else {
    foreach runtime [get_runtime_list] {
        if {$runtime eq ""} {
            set runtime "kernel"
        }
        set test_name "$test: $subtest4 ($runtime)"
        set cmd "stap -g --runtime=$runtime -c ./a.out '$srcdir/$subdir/${test}_4.stp'"
        set exit_code [run_cmd_2way $cmd out stderr]
        set exp_out "ok\n"
        is "${test_name}: stdout" $out $exp_out
        set exp_stderr ""
        is "${test_name}: stderr" $stderr $exp_stderr
        is "${test_name}: exit code" $exit_code 0
    }
}

# --- TEST 5 ---

set subtest5 "TEST 5: PR31018: if stmt needing locks before a map op stmt (check at runtime)"

set res [target_compile ${testpath}/${test}_1.c ./a.out executable \
    "additional_flags=-O additional_flags=-g additional_flags=-Wno-unused-parameter"]
if {$res ne ""} {
    verbose "target_compile failed: $res" 2
    fail "$test: $subtest5: unable to compile ${test}_1.c"
} else {
    foreach runtime [get_runtime_list] {
        if {$runtime eq ""} {
            set runtime "kernel"
        }
        set test_name "$test: $subtest5 ($runtime)"
        set cmd "stap -g --runtime=$runtime -c ./a.out '$srcdir/$subdir/${test}_5.stp'"
        set exit_code [run_cmd_2way $cmd out stderr]
        set exp_out "ok\n"
        is "${test_name}: stdout" $out $exp_out
        set exp_stderr ""
        is "${test_name}: stderr" $stderr $exp_stderr
        is "${test_name}: exit code" $exit_code 0
    }
}
